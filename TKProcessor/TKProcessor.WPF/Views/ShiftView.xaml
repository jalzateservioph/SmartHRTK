<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TKProcessor.WPF.Views"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Name="baseControl" x:Class="TKProcessor.WPF.Views.ShiftView"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000" Background="White">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Content="Employee Shift Setup" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" FontSize="14" FontFamily="Segoe UI Semibold"/>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="1" IsEnabled="{Binding IsEnabled}">
            <Button x:Name="Populate" Content="Reload All" Padding="10,1" Margin="0,0,5,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363" />
            <Button x:Name="New" Content="New" Padding="10,1" Margin="0,0,5,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363"/>
            <Button x:Name="Delete" Content="Delete" Padding="10,1" Margin="0,0,5,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363"/>
            <Button x:Name="Import" Content="Import From Template" Padding="10,1" Margin="0,0,5,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363"/>
            <Button x:Name="DownloadTemplate" Content="Download Template" Padding="10,1" Margin="0,0,5,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363"/>
        </StackPanel>

        <Label Content="Search:" HorizontalAlignment="Left" Margin="0,10,0,0" Grid.Row="2" VerticalAlignment="Top" IsEnabled="{Binding IsEnabled}" />
        <TextBox Height="26" Margin="53,10,0,0" Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Top" VerticalContentAlignment="Center"
                 Text="{Binding FilterString, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsEnabled}"
                 cal:Message.Attach="[Event PreviewKeyDown] = [Action InvokeFilter($eventArgs)]" />

        <Grid Margin="0,10,0,0" Grid.Row="3" IsEnabled="{Binding IsEnabled}" >

            <DataGrid ItemsSource="{Binding Items}" SelectedItem="{Binding CurrentItem}" Background="#FFF3F3F3" BorderBrush="#FF474747" IsReadOnly="True"
                      AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding DataContext.IsCheckedAll, ElementName=baseControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Shift Code" SortMemberPath="ShiftCode">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl cal:Message.Attach="[Event MouseDoubleClick] = [Action Edit()]">
                                    <TextBlock Text="{Binding ShiftCode}"/>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Schedule In" SortMemberPath="ScheduleIn">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl cal:Message.Attach="[Event MouseDoubleClick] = [Action Edit()]">
                                    <TextBlock Text="{Binding ScheduleIn, StringFormat=t}"/>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Schedule Out" SortMemberPath="ScheduleOut">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl cal:Message.Attach="[Event MouseDoubleClick] = [Action Edit()]">
                                    <TextBlock Text="{Binding ScheduleOut, StringFormat=t}"/>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Required (hrs)">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl cal:Message.Attach="[Event MouseDoubleClick] = [Action Edit()]">
                                    <TextBlock Text="{Binding RequiredWorkHours}"/>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Rest Day">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl cal:Message.Attach="[Event MouseDoubleClick] = [Action Edit()]">
                                    <TextBlock Text="{Binding IsRestDay, Converter={StaticResource BooleanToYesNoConverter}}"/>
                                </ContentControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>

        <Grid Grid.Row="1" Background="#BF000000" Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,0,0,0" Grid.RowSpan="3" >
            <Border BorderBrush="#FF767676" BorderThickness="1" Margin="50">

                <Grid Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <Border  Grid.ColumnSpan="2" BorderBrush="#FFA2A2A2"  BorderThickness="0,0,0,1">
                        <Label Content="Add/Edit Shift" FontFamily="Segoe UI Semibold" Background="#FFE0E0E0"/>
                    </Border>

                    <Button x:Name="EndEditing" Content="X" Margin="0,0,2,0" HorizontalAlignment="Right" Width="20" Height="20" 
                            Background="#FFC94D4D" Foreground="White"/>

                    <ScrollViewer HorizontalScrollBarVisibility="Auto"  Grid.Row="1" Margin="0,5,5,0" VerticalAlignment="Top" >
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <!--Row 0-->

                            <Label Content="Shift Code:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="0" Grid.Column="0"/>
                            <TextBox  Height="23" Margin="0" TextWrapping="Wrap" VerticalAlignment="Center" VerticalContentAlignment="Center"
                         Grid.Row="0" Grid.Column="1" Text="{Binding CurrentItem.ShiftCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Description:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="0" Grid.Column="2"/>
                            <TextBox  Height="22" Margin="0" TextWrapping="Wrap" VerticalAlignment="Center" VerticalContentAlignment="Center"
                         Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="5" Text="{Binding CurrentItem.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 1-->

                            <Label Content="Schedule In:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="1" Grid.Column="0" />
                            <xctk:TimePicker Grid.Row="1" Grid.Column="1" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.ScheduleIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Schedule Out:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="1" Grid.Column="2" />
                            <xctk:TimePicker Grid.Row="1" Grid.Column="3" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.ScheduleOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Work Hours:" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="1" Grid.Column="4" Width="78" />
                            <xctk:DecimalUpDown  Height="22" Margin="0" VerticalAlignment="Center" VerticalContentAlignment="Center"
                         Grid.Row="1" Grid.Column="5" Text="{Binding CurrentItem.RequiredWorkHours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Shift Type:" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="1" Grid.Column="6" Width="78" />
                            <ComboBox  VerticalAlignment="Center" VerticalContentAlignment="Center"
                           Grid.Row="1" Grid.Column="7" SelectedIndex="{Binding CurrentItem.ShiftType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem Content="Standard"/>
                                <ComboBoxItem Content="Flexi-time"/>
                            </ComboBox>

                            <!--Row 2-->

                            <Label Content="Is Rest Day:" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="2" Grid.Column="0" Width="78" />
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Grid.ColumnSpan="2" 
                          Grid.Row="2" Grid.Column="1" IsChecked="{Binding CurrentItem.IsRestDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Night Diff. Start:" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="2" Grid.Column="2" Margin="0" />
                            <xctk:TimePicker Grid.Row="2" Grid.Column="3" Margin="0" VerticalAlignment="Center" 
                    Value="{Binding CurrentItem.NightDiffStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Night Diff. End:" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="2" Grid.Column="4" Margin="0" />
                            <xctk:TimePicker Grid.Row="2" Grid.Column="5" Margin="0" VerticalAlignment="Center" 
                    Value="{Binding CurrentItem.NightDiffEnd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Is Over break:" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="2" Grid.Column="6" />
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Grid.ColumnSpan="2" 
                          Grid.Row="2" Grid.Column="7" IsChecked="{Binding CurrentItem.IsOverbreak, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 3-->

                            <Border BorderBrush="#FFB8B8B8" BorderThickness="0,0,1,1" Height="1" VerticalAlignment="Center" Grid.Row="3" Grid.ColumnSpan="8" Margin="0,3"/>

                            <!--Row 4-->

                            <Label Content="AM Break Start:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="4" Grid.Column="0" />
                            <xctk:TimePicker Grid.Row="4" Grid.Column="1" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.AmBreakOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="AM Break End:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="4" Grid.Column="2" />
                            <xctk:TimePicker Grid.Row="4" Grid.Column="3" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.AmBreakIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="PM Break Start:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="4" Grid.Column="4" />
                            <xctk:TimePicker Grid.Row="4" Grid.Column="5" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.PmBreakOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="PM Break End:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="4" Grid.Column="6" />
                            <xctk:TimePicker Grid.Row="4" Grid.Column="7" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.PmBreakIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 5-->

                            <Label Content="Lunch Start:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="5" Grid.Column="0" />
                            <xctk:TimePicker Grid.Row="5" Grid.Column="1" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.LunchOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Lunch End:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="5" Grid.Column="2" />
                            <xctk:TimePicker Grid.Row="5" Grid.Column="3" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.LunchIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Dinner Start:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="5" Grid.Column="4" />
                            <xctk:TimePicker Grid.Row="5" Grid.Column="5" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.DinnerOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label Content="Dinner End:" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                       Grid.Row="5" Grid.Column="6" />
                            <xctk:TimePicker Grid.Row="5" Grid.Column="7" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.DinnerIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 6-->

                            <Border BorderBrush="#FFB8B8B8" BorderThickness="0,0,1,1" Height="1" VerticalAlignment="Center" Grid.Row="6" Grid.ColumnSpan="8" Margin="0,3"/>

                            <!--Row 7-->

                            <Label Content="Is Late In:" HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="7" Grid.Column="0" Margin="0" />
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" 
                    Grid.Row="7" Grid.Column="1" IsChecked="{Binding CurrentItem.IsLateIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="7" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Grace Period (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="7" Grid.Column="3" VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.GracePeriodLateIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="7" Grid.Column="4" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Every After (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Column="5" Margin="0" Grid.Row="7" VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.AfterEvery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="7" Grid.Column="6" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Deduction (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Column="7" Grid.Row="7" Margin="0"  VerticalAlignment="Center" 
                                    Value="{Binding CurrentItem.DeductionLateIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 8-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed"
                    Grid.Row="8" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Is Plus Late In Minutes
                                </TextBlock>
                            </Label>
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Visibility="Collapsed"
                    Grid.Row="8" Grid.Column="1" IsChecked="{Binding CurrentItem.IsPlusLateInMinutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="8" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Max. Minutes Considered As Half Day
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="8" Grid.Column="3"  Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MaximumMinutesConsideredAsHalfDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 9-->

                            <Border BorderBrush="#FFB8B8B8" BorderThickness="0,0,1,1" Height="1" VerticalAlignment="Center" Grid.Row="9" Grid.ColumnSpan="8" Margin="0,3"/>

                            <!--Row 10-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="10" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Is Early Out
                                </TextBlock>
                            </Label>
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                    Grid.Row="10" Grid.Column="1" IsChecked="{Binding CurrentItem.IsEarlyOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="10" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Grace Period (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="10" Grid.Column="3" VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.GracePeriodEarlyOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="10" Grid.Column="4" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Every After (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="10" Grid.Column="5" VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.AfterEveryEarlyOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="10" Grid.Column="6" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Deduction (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown  Grid.Row="10" Grid.Column="10" Margin="0"  VerticalAlignment="Center"
                                     Value="{Binding CurrentItem.DeductionOfEarlyOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 11-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed"
                    Grid.Row="11" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Is Plus Early Out Minutes
                                </TextBlock>
                            </Label>
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Visibility="Collapsed"
                    Grid.Row="11" Grid.Column="1" IsChecked="{Binding CurrentItem.IsPlusEarlyOutMinutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="11" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Max. Minutes Considered As Half Day
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="11" Grid.Column="3"  Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MaximumMinutesConsideredAsHalfAayEarlyOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 12-->

                            <Border BorderBrush="#FFB8B8B8" BorderThickness="0,0,1,1" Height="1" VerticalAlignment="Center" Grid.Row="12" Grid.ColumnSpan="8" Margin="0,3"/>

                            <!--Row 13-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="13" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Pre-Shift OT
                                </TextBlock>
                            </Label>
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                    Grid.Row="13" Grid.Column="1" IsChecked="{Binding CurrentItem.IsPreShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="13" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Min. Pre-Shift OT (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="13" Grid.Column="3" Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MinimumPreShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="13" Grid.Column="4" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Max. Pre-Shift OT (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="13" Grid.Column="5" Margin="0" VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MaximumPreShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="13" Grid.Column="6" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Round Pre-Shift OT
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="13" Grid.Column="7" Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.RoundPreShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 14-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="14" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Post-Shift OT
                                </TextBlock>
                            </Label>
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                    Grid.Row="14" Grid.Column="1" IsChecked="{Binding CurrentItem.IsPostShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="14" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Min. Post-Shift OT (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="14" Grid.Column="3" Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MinimumPostShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="14" Grid.Column="4" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Max. Post-Shift OT (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="14" Grid.Column="5" Margin="0" VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MaximumPostShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="14" Grid.Column="6" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Round Post-Shift OT
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="14" Grid.Column="7" Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.RoundPostShiftOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 15-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="15" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Holiday/Rest Day OT
                                </TextBlock>
                            </Label>
                            <CheckBox HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center"
                    Grid.Row="15" Grid.Column="1" IsChecked="{Binding CurrentItem.IsHolidayRestDayOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="15" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Min. Holiday/Rest Day OT (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="15" Grid.Column="3" Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MinimumHolidayRestDayOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="15" Grid.Column="4" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Max. Holiday/Rest Day OT (Minutes)
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="15" Grid.Column="5" Margin="0" VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.MaximumHolidayRestDayOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="15" Grid.Column="6" Margin="0" MaxWidth="120">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Round Holiday/Rest Day OT
                                </TextBlock>
                            </Label>
                            <xctk:IntegerUpDown Grid.Row="15" Grid.Column="7" Margin="0"  VerticalAlignment="Center"
                                    Value="{Binding CurrentItem.RoundHolidayRestDayOt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <!--Row 16-->

                            <Border BorderBrush="#FFB8B8B8" BorderThickness="0,0,1,1" Height="1" VerticalAlignment="Center" Grid.Row="16" Grid.ColumnSpan="8" Margin="0,3"/>

                            <!--Row 17-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="17" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Flexi Time Type
                                </TextBlock>
                            </Label>
                            <ComboBox VerticalAlignment="Center" VerticalContentAlignment="Center"
                            Grid.Row="17" Grid.Column="1"
                            SelectedIndex="{Binding CurrentItem.FlextimeType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem Content="Full"/>
                                <ComboBoxItem Content="Semi-On-The-Dot"/>
                                <ComboBoxItem Content="Semi-Fixed Increments"/>
                            </ComboBox>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="17" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Increment
                                </TextBlock>
                            </Label>
                            <ComboBox VerticalAlignment="Center" VerticalContentAlignment="Center"
                            Grid.Row="17" Grid.Column="3" 
                            SelectedIndex="{Binding CurrentItem.Increment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem Content="Half Hour (30 min)"/>
                                <ComboBoxItem Content="Whole Hour (60 min)"/>
                            </ComboBox>

                            <!--Row 18-->

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="18" Grid.Column="0" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Earliest Time In
                                </TextBlock>
                            </Label>
                            <xctk:TimePicker Grid.Row="18" Grid.Column="1" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.EarliestTimeIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="18" Grid.Column="2" Margin="0" MaxWidth="100">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Earliest Time Out
                                </TextBlock>
                            </Label>
                            <xctk:TimePicker Grid.Row="18" Grid.Column="3" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.EarliestTimeOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="18" Grid.Column="4" Margin="0" MaxWidth="120">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Latest Time In
                                </TextBlock>
                            </Label>
                            <xctk:TimePicker Grid.Row="18" Grid.Column="5" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.LatestTimeIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Label HorizontalAlignment="Left" VerticalAlignment="Center"
                    Grid.Row="18" Grid.Column="6" Margin="0" MaxWidth="120">
                                <TextBlock TextWrapping="WrapWithOverflow">
                        Latest Time Out
                                </TextBlock>
                            </Label>
                            <xctk:TimePicker Grid.Row="18" Grid.Column="7" Margin="0" VerticalAlignment="Center" 
                                 Value="{Binding CurrentItem.LatestTimeOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </ScrollViewer>

                    <Button x:Name="Save" Content="Save" Grid.Row="2" Margin="0,10,0,5" Padding="20,0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF636363" HorizontalAlignment="Center" FontWeight="Bold"/>
                </Grid>

            </Border>
        </Grid>

    </Grid>
</UserControl>
